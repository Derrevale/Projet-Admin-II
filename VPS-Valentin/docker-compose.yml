version: '2'

services: 

    resolver:
        build: 
            context: ./Resolver
            dockerfile: Dockerfile
        #dns: 172.16.1.3
        networks: 
            local_net:
                ipv4_address: 172.16.1.4
        volumes:
            - ./Resolver/named.conf:/etc/bind/named.conf
        container_name: resolver

    intranet:
        build:
            context: ./Intranet_ERP
            dockerfile: Dockerfile
        #dns: 172.16.1.3
        ports:
            - "8080:80"
        networks:
            local_net:
                ipv4_address: 172.16.1.2
        container_name: intranet_ERP



    soa_interne:
        build: 
            context: ./SOA_int 
            dockerfile: Dockerfile

        ports: 
            - "53:53/tcp"
            - "53:53/udp"
        #dns: 172.16.1.3
        networks: 
            local_net:
                ipv4_address: 172.16.1.3
        container_name: soa_interne


    administration:
        build: 
            context: ./Intranet_ERP/Docker-administration
            dockerfile: Dockerfile
        #dns: 172.16.1.3

        networks:
            administration_net:
                ipv4_address: 172.16.4.2
        container_name: user_admin1

    commerciaux:
        build: 
            context: ./Intranet_ERP/Docker-commerciaux
            dockerfile: Dockerfile
        #dns: 172.16.1.3
        
        networks:
            commerciaux_net:
                ipv4_address: 172.16.3.2
        container_name: user_commerciaux1

    direction:
        build: 
            context: ./Intranet_ERP/Docker-direction
            dockerfile: Dockerfile
        #dns: 172.16.1.3
        networks:
            direction_net:
                ipv4_address: 172.16.2.2
        container_name: user_direction1

    atelier:
        build: 
            context: ./Intranet_ERP/Docker-atelier
            dockerfile: Dockerfile
        #dns: 172.16.1.3
        networks:
            atelier_net:
                ipv4_address: 172.16.5.2
        container_name: user_atelier1

    web:
    # Attribue un nom au container du serveur WEB apache
        container_name: container-apache-woodytoys
        build :
      # directives permettant de pouvoir indiquer au docker-compose où chercher le dockerfile pour l'image du serveur WEB apache
            context: ./WEB_vitrine
            dockerfile: www/Dockerfile
        ports:
      # Attribue les ports 80 pour le container WEB
            - 80:80
        networks:
      # Attribue une adresse IP au container WEB appartenant à la zone DMZ
            dmz_net:
                ipv4_address: 172.16.0.5
        links:
            - db
        volumes:
            - /Web_vitrine/config/sites-available/WoodyToys.conf-B2B.conf
    db:
    # Attribue un nom au container de la base de données MySQL
        container_name: container-mysql-woodytoysdb
        build:
      # directives permettant de pouvoir indiquer au docker-compose où chercher le dockerfile pour l'image de la base de données mysql
            context: ./WEB_vitrine/DB/mysql
            dockerfile: Dockerfile
        networks:
      # Attribue une adresse IP au container WEB appartenant à la zone DMZ
            local_net:
                ipv4_address: 172.16.1.7
        environment:
      # Créé une base de données, attribue un mot de passe pour le root et utilisateur admin nouvellement créé
            MYSQL_DATABASE : woodytoys_db
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: 'admin'
            MYSQL_PASSWORD: root
        restart: always
    # Attribution des ports 3306 pour le service MySQL
        ports:
          - "3306:3306"
        volumes:
      # Commande permettant de pouvoir insérer les données dans la DB depuis un fichier .sql
        - ./WEB_vitrine/DB/db_woodytoys/db-data:/docker-entrypoint-initdb.d

##############################################
##       Docker Networks Configuration      ##
##############################################

networks:                          
        
    local_net:
        ipam:
            driver: default
            config:
                - subnet: 172.16.1.0/24
                  gateway:  172.16.1.1

    direction_net:
        ipam:
            driver: default
            config:
                - subnet: 172.16.2.0/24
                  gateway:  172.16.2.1

    commerciaux_net:
        ipam:
            driver: default
            config:
                - subnet: 172.16.3.0/24
                  gateway:  172.16.3.1

    administration_net:
        ipam:
            driver: default
            config:
                - subnet: 172.16.4.0/24
                  gateway: 172.16.4.1

    atelier_net:
        ipam:
            driver: default
            config:
                - subnet: 172.16.5.0/24
                  gateway: 172.16.5.1

    dmz_net:
        ipam:
            driver: default
            config:
                - subnet: 172.16.0.0/24
                  gateway: 172.16.0.1


